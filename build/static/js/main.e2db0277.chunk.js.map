{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FotterComponent.js","components/DishdetailComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/Maincomponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","width","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","onClick","to","id","Menu","menu","dishes","map","active","RenderLeader","left","object","body","heading","RenderContent","leaders","About","title","list","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","resetOnSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","Header","state","isNavOpen","isModalOpen","toogleNav","toggleNav","toggleModal","handleLogin","setState","alert","username","value","password","remember","checked","dark","expand","NavbarBrand","herf","height","isOpen","navbar","outline","toggle","innerRef","input","Footer","CommentForm","isCommentFormModalOpen","toggleCommentFormModal","handleCommentFormSubmit","postComment","dishId","rating","author","comment","Fragment","RenderDish","top","RenderComments","comments","cmnts","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2db0277.chunk.js","sourcesContent":["import React from 'react';\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\">\r\n\r\n            </span>\r\n            <p> Loading...</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';\r\n","import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    CardSubtitle\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess }) {\r\n\r\n    if (isLoading) {\r\n\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if ( errMess ) {\r\n        \r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={baseUrl + item.image} alt={item.name} />                \r\n                    <CardBody>\r\n                        <CardTitle> {item.name} </CardTitle>\r\n        \r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n        \r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n        \r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.dish}\r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishErrMess}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                        item={props.promotion} \r\n                        isLoading={props.promoLoading}\r\n                        errMess={props.promoErrMess} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                        item={props.leader} \r\n                        isLoading={props.leaderLoading}\r\n                        errMess={props.leaderErrMess} \r\n\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React  from \"react\";\r\nimport { Card, CardImg, CardImgOverlay,  Breadcrumb,BreadcrumbItem, CardTitle  } from \"reactstrap\";\r\n//import DishDetail from './DishdetailComponent.js';\r\nimport {Loading } from './LoadingComponent'\r\nimport {Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n  function RenderMenuItem({dish , onClick}) {\r\nreturn (\r\n    <Card   >\r\n<Link to={`/menu/${dish.id}`} >\r\n    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n\r\n\r\n          <CardImgOverlay>\r\n        <CardTitle> { dish.name }</CardTitle>\r\n    </CardImgOverlay>\r\n    </Link>\r\n</Card>                \r\n       );\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n   \r\n       const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={ dish.id } className=\"col-12 col-md-5 m-1\">    \r\n                 <RenderMenuItem dish={dish}  />\r\n                </div>\r\n            );\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n          return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                  \r\n                    <BreadcrumbItem active >Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                       <h3 >Menu</h3>\r\n                       <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    { menu }\r\n                </div>\r\n            </div>\r\n        );\r\n       } \r\n        \r\n      \r\n    \r\n\r\n    // componentDidMount(){\r\n    //     console.log('Menu component componentDidMounbt is invoked');\r\n        \r\n    \r\n\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport { Loading } from \"./LoadingComponent\";\r\n\r\n\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <Media className=\"mt-5\">\r\n            <Media left className=\"mr-5\">\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body>\r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                {leader.description}\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nfunction RenderContent({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    } else if (errMess) {\r\n        return <h4>{errMess}</h4>;\r\n    } else\r\n        return (\r\n            <Stagger in>\r\n                {leaders.map(leader => (\r\n                    <Fade in key={leader.id}>\r\n                        <RenderLeader key={leader.id} leader={leader} />\r\n                    </Fade>\r\n                ))}\r\n            </Stagger>\r\n        );\r\n}\r\n\r\n\r\nfunction About(props) {\r\n\r\n    // const leaders = props.leaders.map((leader) => {\r\n    //     return (\r\n    //         <RenderLeader \r\n    //             leader={leader} \r\n    //             isLoading={props.leaderLoading}\r\n    //             errMess={props.leaderErrMess} \r\n\r\n    //         />            \r\n    //     );\r\n    // });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                \r\n                <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n                        <Media list>\r\n                            <RenderContent\r\n                                leaders={props.leaders}\r\n                                isLoading={props.leaderLoading}\r\n                                errMess={props.leaderErrMess}\r\n                            />                              \r\n                        </Media>        \r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, \r\n     Label,  Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Control, LocalForm, Form, Errors, actions } from 'react-redux-form';\r\n\r\n\r\n//// validators\r\nconst required = (val) => val && val.length; //value > 0\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) &&( val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n\r\nclass Contact extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        // console.log(\"Current State is: \" + JSON.stringify( values ) );\r\n        // alert(\"Current State is: \" + JSON.stringify( values ) );\r\n\r\n        \r\n        this.props.postFeedback( values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message );\r\n        this.props.resetFeedbackForm();\r\n\r\n\r\n            \r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Contact Us\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n    \r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3> Send us your feedback</h3>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)} resetOnSubmit={true}>\r\n                            \r\n                            {/* firstname */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text  model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"   \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}                                 \r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: 'Must be greater that 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}\r\n                                    ></Errors>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* lastname */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* telphone */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* email */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* ? */}\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"  name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            />{' '}\r\n                                            <strong>May we contact you? </strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\"  \r\n                                        className=\"form-control\"\r\n                                        name=\"contactType\"\r\n                                    >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* feedback */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\"  id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* submit button */}\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Contact;","import React , {Component} from 'react';\r\nimport { NavbarBrand } from 'react-bootstrap';\r\nimport {Navbar , Jumbotron , Nav , NavbarToggler ,Modal , Button , ModalHeader , ModalBody, Collapse, NavItem, FormGroup , Form , Input , Label } from 'reactstrap';\r\n\r\nimport {NavLink} from 'react-router-dom';\r\nclass Header extends Component {\r\nconstructor(props){\r\n    super(props);\r\n    this.state= {\r\nisNavOpen:false , \r\nisModalOpen: false\r\n    };\r\n   \r\n    this.toogleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n}\r\ntoggleNav( ) {\r\n    this.setState({\r\n        isNavOpen: !this.state.isNavOpen\r\n    })\r\n}\r\ntoggleModal( ) {\r\n    this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n    })\r\n} \r\nhandleLogin( ) {\r\n    this.toggleModal();\r\n    alert('Username:'+ this.username . value +\"Password:\" + this.password.value + 'Remember:' +this.remember.checked);\r\n    //.preventDefault();\r\n   // event.preventDefault();\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <>\r\n          <Navbar dark expand='md'>\r\n     \r\n       <div className=\"container\">\r\n           <NavbarToggler onClick={this.toogleNav} />\r\n         <NavbarBrand className='mr-auto' herf=\"/\">\r\n           <img src=\"assets/images/logo.png\" height =\"30 \" width=\"41\" alt = \"Restorante Con Fusion\" />\r\n         </NavbarBrand>\r\n         <Collapse isOpen ={this.state.isNavOpen} navbar>\r\n         <Nav navbar >\r\n           \r\n         <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n         </Nav>\r\n         <Nav className=\"ml-auto\" navbar>\r\n             <NavItem>\r\n<Button outline onClick={this.toggleModal}>\r\n    <span className=\"fa fa-sign-in fa-lg\"></span>\r\n    Login\r\n</Button>\r\n             </NavItem>\r\n             </Nav>\r\n         </Collapse>\r\n         </div>\r\n       </Navbar>\r\n       <Jumbotron>\r\n       <div className=\"container\">\r\n\r\n           <div className=\"row row-header\">\r\n               <div className=\"col-12 col-sm-6\">\r\n                   <h1>\r\n                       Restorant Con fusion\r\n                   </h1>\r\n                   <p>\r\n                       We take inspiration from the world best cusines , and create a unique fusion of experience . Our lipsmacking creations will tickle your  culiration. \r\n                   </p>\r\n               </div>\r\n           </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal isOpen = {this.state.isModalOpen} toggle={this.toggleModal}>\r\n           <ModalHeader toggle={this.toggleModal}>\r\n               Login\r\n           </ModalHeader>\r\n           <ModalBody>\r\n<Form onSubmit={this.handleLogin}>\r\n    <FormGroup>\r\n        <Label htmlFor='username'>Username</Label>\r\n        <Input type='text ' id=\"username\" name=\"username\"\r\n        innerRef={(input) => this.username= input} />\r\n    \r\n    </FormGroup>\r\n   \r\n    <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n    <FormGroup check>\r\n<Label check>\r\n    <Input type='checkbox' name='remember'\r\n      innerRef={(input) => this.remember= input} />\r\n     Remember me\r\n</Label>\r\n    </FormGroup>\r\n    <Button type='submit' value = 'submit' color=\"primary \">Login</Button>\r\n</Form>\r\n           </ModalBody>\r\n       </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n}\r\nexport default Header;","import React  from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer (props) {\r\n    return (\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to =\"aboutus\">About us</Link></li>\r\n                        <li><Link to=\"menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem, CardBody, CardText } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Button, Modal, ModalBody, ModalHeader, Label, Row, Col\r\n} from \"reactstrap\";\r\n//import { addComment } from '../redux/ActionCreators';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransfrom  , Fade , Stagger} from 'react-animation-components';\r\n\r\n/**........................ comment component ends ................................................. */\r\n//// validators\r\nconst required = (val) => val && val.length; //value > 0\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            isCommentFormModalOpen: false\r\n        };\r\n\r\n        this.toggleCommentFormModal = this.toggleCommentFormModal.bind(this);\r\n        this.handleCommentFormSubmit = this.handleCommentFormSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleCommentFormSubmit(values) {\r\n     this.props.postComment(this.props.dishId , values.rating , values.author , values.comment);\r\n\r\n\r\n    }\r\n\r\n    toggleCommentFormModal() {\r\n        this.setState({\r\n            isCommentFormModalOpen: !this.state.isCommentFormModalOpen\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleCommentFormModal}>\r\n                    <span className=\"fa fa-comments fa-lg\"></span> Submit Comment\r\n                </Button>\r\n\r\n\r\n                {/* commentform  Modal */}\r\n                <Modal isOpen={this.state.isCommentFormModalOpen} toggle={this.toggleCommentFormModal} >\r\n                    <ModalHeader toggle={this.toggleCommentFormModal}> Submit Comment </ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <LocalForm onSubmit={(values) => this.handleCommentFormSubmit(values)}>\r\n\r\n                            {/* rating */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12} >Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\"\r\n                                        className=\"form-control\"\r\n                                        name=\"rating\"\r\n                                        id=\"rating\"\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n                                    >\r\n                                        <option>Please Select</option>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            {/* author */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}> Your Name </Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n\r\n\r\n                            {/* comment */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            {/* submit button */}\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </LocalForm>\r\n\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className='col-12 col-md-5 m-1'>\r\n                    \r\n                    <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle> {dish.name}</CardTitle>\r\n                            <CardText> {dish.description} </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>   \r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderComments({dish,comments , postComment , dishId}){\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n                \r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n\r\n            )\r\n        })\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n                <CommentForm dish={dish} comments={comments}\r\n                dishId = {dishId}\r\n                postComment ={postComment}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const DishDetail = (props) => {\r\n       if(props.isLoading) {\r\n           return (\r\n         <div className='container'>\r\n            <div className='row'>\r\n                <Loading />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n       else if(props.errMess) {\r\n            return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                  <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n   );\r\n}\r\n\r\nconst dish = props.dish\r\n        \r\n    \r\n        if (dish == null) {\r\n            return (<div></div>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/menu\">Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            { props.dish.name }\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n\r\n                    <div className=\"col-12\">\r\n                        <h3> {props.dish.menu}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <RenderDish dish={ props.dish } />\r\n                    <RenderComments dish={props.dish} comments={ props.comments }\r\n                    postComment={ props.postComment}\r\n                    dishId={props.dish.id}/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default DishDetail;","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING ='LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK'; \r\nexport const ADD_FEEDBACKS = 'ADD_FEEDBACKS'; //for populating comments from db\r\nexport const FEEDBACKS_FAILED = 'FEEDBACKS_FAILED';\r\nexport const SET_FEEDBACK_SUBMITED = 'SET_FEEDBACK_SUBMITED';\r\nexport const FEEDBACK_FAILED = 'FEEDBACK_FAILED';","import * as ActionTypes from './ActionTypes';\r\n// import { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n/**.......... Comment............................ */\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\n\r\nexport const postComment = (dishId, rating, author, comment)=> (dispatch)=> {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment,\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch( baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n\r\n        if (response.ok) {\r\n                return response;\r\n        }\r\n        else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n        }\r\n    },\r\n        ////if no responmse from server \r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        }\r\n    )\r\n    .then( response => response.json() )\r\n    .then( response => dispatch(addComment(response)) )\r\n    .catch(error => {\r\n        console.log('Post Comments', error.message); \r\n        alert('Comment could not be posted\\nError'+ error.message);\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**.......... Feedback ............................ */\r\n// export const addFeedback = (feedback) => ({\r\n//     type: ActionTypes.ADD_FEEDBACK,\r\n//     payload: feedback\r\n// });\r\n\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message,\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n\r\n            if (response.ok) {\r\n                \r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            ////if no responmse from server \r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => alert(JSON.stringify(response)))\r\n        .catch(error => {\r\n            console.log('Post Comments', error.message);\r\n            alert('Comment could not be posted\\nError' + error.message);\r\n        });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**.......... Dishes............................ */\r\n//// thunk: function returns an func\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) \r\n            {\r\n                return response;\r\n            }\r\n            else\r\n            {\r\n                var error = new Error('Error ' + response.status + ': '+ response.statusText )\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n         ////if no responmse from server \r\n         error => {\r\n            var errmess = new Error( error.message );\r\n            throw errmess;\r\n         })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message) ) );\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n//function returns an action\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**.......... Comments............................ */\r\n//// thunk: function returns an func\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        ////if no responmse from server \r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        }) \r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\n\r\n/**.......... promos............................ */\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        ////if no responmse from server \r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n\r\n\r\n/**.......... leaders............................ */\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch( leadersLoading() );\r\n\r\n    return fetch( baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        ////if no responmse from server \r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then( leaders => dispatch( addLeaders(leaders) ) ) \r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","import React, { Component } from 'react';\r\n\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FotterComponent';\r\nimport DishDetail from './DishdetailComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return{\r\n        comments: state.comments,\r\n        dishes: state.dishes,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions,\r\n    }\r\n}       \r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    \r\n    \r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    \r\n    fetchComments: () => dispatch(fetchComments()),\r\n    \r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    \r\n    \r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={\r\n                        this.props.dishes.dishes.filter(dish => dish.featured)[0]\r\n                    }\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                   \r\n                    promotion={\r\n                        this.props.promotions.promotions.filter(promo => promo.featured)[0]\r\n                    }\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    \r\n                    leader={\r\n                        this.props.leaders.leaders.filter((leader) => leader.featured)[0]\r\n                    }\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n\r\n                />\r\n            );\r\n        };\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const AboutUsPage = () => {\r\n            return(\r\n                <About \r\n                    leaders={this.props.leaders.leaders}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        };\r\n\r\n\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    \r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={ HomePage } />\r\n                            <Route exact path=\"/menu\" \r\n                                component={() => <Menu dishes={this.props.dishes}/> }\r\n                            />\r\n\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n\r\n                            <Route exact path=\"/contactus\" component={() => <Contact \r\n                                                                                resetFeedbackForm={this.props.resetFeedbackForm } \r\n                                                                                postFeedback={this.props.postFeedback}\r\n\r\n                                                                            /> } \r\n                            />\r\n\r\n                            <Route exact path=\"/aboutus\" component={ AboutUsPage } />\r\n                        \r\n                            {/* if url dosesnt match, bydefault redirect to */}\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n\r\n\r\n                <Footer></Footer>\r\n            </div> \r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n","// import {DISHES} from '../shared/dishes';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess : null , \r\n    dishes: []\r\n},action  ) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state , isLoading: false, errMess:null , dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state , isLoading: true, errMess:null , dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state , isLoading: false, errMess:action.payload , dishes: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n      \r\n       \r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\nswitch (action.type) {\r\ncase ActionTypes.ADD_PROMOS:\r\nreturn {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\ncase ActionTypes.PROMOS_LOADING:\r\nreturn {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\ncase ActionTypes.PROMOS_FAILED:\r\nreturn {...state, isLoading: false, errMess: action.payload};\r\n\r\ndefault:\r\nreturn state;\r\n}\r\n};","  \r\nimport * as ActionTypes from './ActionTypes';\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname:'',\r\n    lastname:'',\r\n    telnum:'',\r\n    email:'',\r\n    agree:false,\r\n    contactType:'Tel' , \r\n    message:''\r\n\r\n}","//import logo from './logo.svg';\nimport React , { Component} from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport Main from './components/Maincomponent';\nimport {ConfigureStore} from './redux/configureStore';\nconst store = ConfigureStore();\n\nclass App extends Component  {\n\n\nrender() {\n  return (\n    <Provider store={store}>\n    <BrowserRouter>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n}\nexport default App;\n","import {createStore, combineReducers , applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {createForms} from 'react-redux-form';\r\nimport {InitialFeedback} from './forms'\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback:InitialFeedback\r\n            })\r\n\r\n        }) ,\r\n        applyMiddleware(thunk , logger) \r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}